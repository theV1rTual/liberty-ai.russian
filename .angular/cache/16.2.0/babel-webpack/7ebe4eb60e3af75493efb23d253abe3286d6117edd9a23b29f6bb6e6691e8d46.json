{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/scroll.service\";\nimport * as i2 from \"@angular/common\";\nfunction ProcessesComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"h2\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const process_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(process_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(process_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(process_r1.text);\n  }\n}\nexport class ProcessesComponent {\n  constructor(scrollService, el) {\n    this.scrollService = scrollService;\n    this.el = el;\n    this.processes = [{\n      title: 'Реактивация',\n      description: 'Конверсия х3',\n      text: 'Повторное привлечение клиентов, не совершавших покупок в течение длительного времени, с помощью роботов, работающих на основе Искусственного Интеллекта и неотличимых от людей.'\n    }, {\n      title: 'Удержание клиентов',\n      description: '94% повторных покупок ',\n      text: 'Обеспечение бесперебойной, персонализированной, многоканальной коммуникации для поддержания высокого уровня удержания клиентов.'\n    }, {\n      title: 'Контроль качества и NPS',\n      description: 'В течение 30 минут',\n      text: 'Быстрый и эффективный сбор отзывов для улучшения качества услуг и поддержания высокого уровня качества.'\n    }];\n  }\n  ngOnInit() {\n    this.scrollService.setScrollFunction('component2', () => this.scrollToComponent());\n  }\n  scrollToComponent() {\n    this.el.nativeElement.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center'\n    });\n  }\n}\n_class = ProcessesComponent;\n_class.ɵfac = function ProcessesComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ScrollService), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-processes\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"relative\", \"mb-16\", \"md:mb-40\", \"z-[41]\"], [1, \"font-bold\", \"text-2xl\", \"mb-5\", \"text-center\"], [1, \"flex\", \"flex-col\", \"md:flex-row\", \"gap-5\", \"mb-5\", \"relative\", \"z-10\"], [\"class\", \"bg-container-bg-color bg-opacity-50 rounded-xl p-4 md:w-1/3\", 4, \"ngFor\", \"ngForOf\"], [1, \"bg-container-bg-color\", \"bg-opacity-50\", \"rounded-xl\", \"p-4\", \"md:w-1/3\"], [1, \"font-bold\", \"text-lg\", \"mb-5\"], [1, \"font-bold\", \"text-active-tab-color\", \"mb-5\"]],\n  template: function ProcessesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"\\u041A\\u0430\\u043A\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0446\\u0435\\u0441\\u0441\\u044B \\u043C\\u044B \\u043E\\u043F\\u0442\\u0438\\u043C\\u0438\\u0437\\u0438\\u0440\\u0443\\u0435\\u043C?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, ProcessesComponent_div_4_Template, 7, 3, \"div\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.processes);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","process_r1","title","description","text","ProcessesComponent","constructor","scrollService","el","processes","ngOnInit","setScrollFunction","scrollToComponent","nativeElement","scrollIntoView","behavior","block","ɵɵdirectiveInject","i1","ScrollService","ElementRef","selectors","decls","vars","consts","template","ProcessesComponent_Template","rf","ctx","ɵɵtemplate","ProcessesComponent_div_4_Template","ɵɵproperty"],"sources":["/Users/thev1rtual/Desktop/code/liberty-final/src/app/components/processes/processes.component.ts","/Users/thev1rtual/Desktop/code/liberty-final/src/app/components/processes/processes.component.html"],"sourcesContent":["import {Component, ElementRef} from \"@angular/core\";\nimport {ScrollService} from \"../../services/scroll.service\";\n\n@Component({\n  selector: 'app-processes',\n  templateUrl: './processes.component.html'\n})\n\nexport class ProcessesComponent {\n\n  constructor(private scrollService: ScrollService, private el: ElementRef) {}\n\n  ngOnInit() {\n    this.scrollService.setScrollFunction('component2', () => this.scrollToComponent());\n  }\n\n  scrollToComponent() {\n    this.el.nativeElement.scrollIntoView({ behavior: 'smooth', block : 'center' });\n  }\n\n  processes = [\n    {\n      title: 'Реактивация',\n      description: 'Конверсия х3',\n      text: 'Повторное привлечение клиентов, не совершавших покупок в течение длительного времени, с помощью роботов, работающих на основе Искусственного Интеллекта и неотличимых от людей.'\n    },\n    {\n      title: 'Удержание клиентов',\n      description: '94% повторных покупок ',\n      text: 'Обеспечение бесперебойной, персонализированной, многоканальной коммуникации для поддержания высокого уровня удержания клиентов.'\n    },\n    {\n      title: 'Контроль качества и NPS',\n      description: 'В течение 30 минут',\n      text: 'Быстрый и эффективный сбор отзывов для улучшения качества услуг и поддержания высокого уровня качества.'\n    }\n  ]\n}\n","<div class=\"relative mb-16 md:mb-40 z-[41]\">\n  <h2 class=\"font-bold text-2xl mb-5 text-center\">Какие процессы мы оптимизируем?</h2>\n  <div class=\"flex flex-col md:flex-row gap-5 mb-5 relative z-10\">\n    <div *ngFor=\"let process of processes\" class=\"bg-container-bg-color bg-opacity-50 rounded-xl p-4 md:w-1/3\">\n      <h2 class=\"font-bold text-lg mb-5\">{{process.title}}</h2>\n      <p class=\"font-bold text-active-tab-color mb-5\">{{process.description}}</p>\n      <p>{{process.text}}</p>\n    </div>\n  </div>\n</div>\n"],"mappings":";;;;;;ICGIA,EAAA,CAAAC,cAAA,aAA2G;IACtED,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzDH,EAAA,CAAAC,cAAA,WAAgD;IAAAD,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC3EH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAFYH,EAAA,CAAAI,SAAA,GAAiB;IAAjBJ,EAAA,CAAAK,iBAAA,CAAAC,UAAA,CAAAC,KAAA,CAAiB;IACJP,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAK,iBAAA,CAAAC,UAAA,CAAAE,WAAA,CAAuB;IACpER,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAK,iBAAA,CAAAC,UAAA,CAAAG,IAAA,CAAgB;;;ADEzB,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,aAA4B,EAAUC,EAAc;IAApD,KAAAD,aAAa,GAAbA,aAAa;IAAyB,KAAAC,EAAE,GAAFA,EAAE;IAU5D,KAAAC,SAAS,GAAG,CACV;MACEP,KAAK,EAAE,aAAa;MACpBC,WAAW,EAAE,cAAc;MAC3BC,IAAI,EAAE;KACP,EACD;MACEF,KAAK,EAAE,oBAAoB;MAC3BC,WAAW,EAAE,wBAAwB;MACrCC,IAAI,EAAE;KACP,EACD;MACEF,KAAK,EAAE,yBAAyB;MAChCC,WAAW,EAAE,oBAAoB;MACjCC,IAAI,EAAE;KACP,CACF;EA1B0E;EAE3EM,QAAQA,CAAA;IACN,IAAI,CAACH,aAAa,CAACI,iBAAiB,CAAC,YAAY,EAAE,MAAM,IAAI,CAACC,iBAAiB,EAAE,CAAC;EACpF;EAEAA,iBAAiBA,CAAA;IACf,IAAI,CAACJ,EAAE,CAACK,aAAa,CAACC,cAAc,CAAC;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,KAAK,EAAG;IAAQ,CAAE,CAAC;EAChF;;SAVWX,kBAAkB;;mBAAlBA,MAAkB,EAAAV,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAxB,EAAA,CAAAsB,iBAAA,CAAAtB,EAAA,CAAAyB,UAAA;AAAA;;QAAlBf,MAAkB;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR/BhC,EAAA,CAAAC,cAAA,aAA4C;MACMD,EAAA,CAAAE,MAAA,6KAA+B;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACpFH,EAAA,CAAAC,cAAA,aAAgE;MAC9DD,EAAA,CAAAkC,UAAA,IAAAC,iCAAA,iBAIM;MACRnC,EAAA,CAAAG,YAAA,EAAM;;;MALqBH,EAAA,CAAAI,SAAA,GAAY;MAAZJ,EAAA,CAAAoC,UAAA,YAAAH,GAAA,CAAAnB,SAAA,CAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}