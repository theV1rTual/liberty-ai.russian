{"ast":null,"code":"var _class, _class2;\nimport * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Component, ChangeDetectionStrategy, Inject, Optional, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction _class_div_0_ng_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"appearance  === 'custom-content'\"]);\n  }\n}\nconst _c0 = function (a0, a1, a2, a3, a4) {\n  return {\n    \"custom-content\": a0,\n    circle: a1,\n    progress: a2,\n    \"progress-dark\": a3,\n    pulse: a4\n  };\n};\nfunction _class_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, _class_div_0_ng_content_1_Template, 1, 0, \"ng-content\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction5(5, _c0, ctx_r0.appearance === \"custom-content\", ctx_r0.appearance === \"circle\", ctx_r0.animation === \"progress\", ctx_r0.animation === \"progress-dark\", ctx_r0.animation === \"pulse\"))(\"ngStyle\", ctx_r0.theme);\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel)(\"aria-valuetext\", ctx_r0.loadingText);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.appearance === \"custom-content\");\n  }\n}\nconst _c1 = [\"*\"];\nconst NGX_SKELETON_LOADER_CONFIG = new InjectionToken('ngx-skeleton-loader.config');\nclass NgxSkeletonLoaderComponent {\n  constructor(config) {\n    this.config = config;\n    const {\n      appearance = 'line',\n      animation = 'progress',\n      theme = null,\n      loadingText = 'Loading...',\n      count = 1,\n      ariaLabel = 'loading'\n    } = config || {};\n    this.appearance = appearance;\n    this.animation = animation;\n    this.theme = theme;\n    this.loadingText = loadingText;\n    this.count = count;\n    this.items = [];\n    this.ariaLabel = ariaLabel;\n  }\n  ngOnInit() {\n    this.validateInputValues();\n  }\n  validateInputValues() {\n    // Checking if it's receiving a numeric value (string having ONLY numbers or if it's a number)\n    if (!/^\\d+$/.test(`${this.count}`)) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'count' a numeric value. Forcing default to \"1\".`);\n      }\n      this.count = 1;\n    }\n    //Force count to 1 when custom-content is used\n    if (this.appearance === 'custom-content') {\n      // Shows error message only in Development\n      if (isDevMode() && this.count !== 1) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` enforces elements with \"custom-content\" appearance as DOM nodes. Forcing \"count\" to \"1\".`);\n        this.count = 1;\n      }\n    }\n    this.items.length = this.count;\n    const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];\n    if (allowedAnimations.indexOf(String(this.animation)) === -1) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'animation' as: ${allowedAnimations.join(', ')}. Forcing default to \"progress\".`);\n      }\n      this.animation = 'progress';\n    }\n    if (['circle', 'line', 'custom-content', ''].indexOf(String(this.appearance)) === -1) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'appearance' as: circle or line or custom-content or empty string. Forcing default to \"''\".`);\n      }\n      this.appearance = '';\n    }\n    // This code is not using optional chaining since it's only supported on Angular CLI v12\n    //  - more details in this comment https://github.com/angular/angular-cli/issues/20471#issuecomment-815599616\n    // Which raises issues on the consumer's side. E.G: https://github.com/willmendesneto/ngx-skeleton-loader/issues/150#issuecomment-1638612329\n    const {\n      theme\n    } = this.config || {};\n    if (!!theme && !!theme.extendsFromRoot && this.theme !== null) {\n      // Shows error message only in Development\n      this.theme = {\n        ...this.config.theme,\n        ...this.theme\n      };\n    }\n  }\n  ngOnChanges(changes) {\n    // Avoiding multiple calls for the same input in case there's no changes in the fields\n    // Checking if the fields that require validation are available and if they were changed\n    // In case were not changed, we stop the function. Otherwise, `validateInputValues` will be called.\n    if (['count', 'animation', 'appearance'].find(key => changes[key] && (changes[key].isFirstChange() || changes[key].previousValue === changes[key].currentValue))) {\n      return;\n    }\n    this.validateInputValues();\n  }\n  /** @nocollapse */\n}\n_class = NgxSkeletonLoaderComponent;\n_class.ɵfac = function _class_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(NGX_SKELETON_LOADER_CONFIG, 8));\n};\n/** @nocollapse */_class.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ngx-skeleton-loader\"]],\n  inputs: {\n    count: \"count\",\n    loadingText: \"loadingText\",\n    appearance: \"appearance\",\n    animation: \"animation\",\n    ariaLabel: \"ariaLabel\",\n    theme: \"theme\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"skeleton-loader\", \"aria-busy\", \"true\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"role\", \"progressbar\", \"tabindex\", \"-1\", 3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"aria-busy\", \"true\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"role\", \"progressbar\", \"tabindex\", \"-1\", 1, \"skeleton-loader\", 3, \"ngClass\", \"ngStyle\"], [4, \"ngIf\"]],\n  template: function _class_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, _class_div_0_Template, 2, 11, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgStyle],\n  styles: [\".skeleton-loader[_ngcontent-%COMP%]{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader[_ngcontent-%COMP%]:after, .skeleton-loader[_ngcontent-%COMP%]:before{box-sizing:border-box}.skeleton-loader.circle[_ngcontent-%COMP%]{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress[_ngcontent-%COMP%], .skeleton-loader.progress-dark[_ngcontent-%COMP%]{transform:translateZ(0)}.skeleton-loader.progress[_ngcontent-%COMP%]:after, .skeleton-loader.progress[_ngcontent-%COMP%]:before, .skeleton-loader.progress-dark[_ngcontent-%COMP%]:after, .skeleton-loader.progress-dark[_ngcontent-%COMP%]:before{box-sizing:border-box}.skeleton-loader.progress[_ngcontent-%COMP%]:before, .skeleton-loader.progress-dark[_ngcontent-%COMP%]:before{animation:_ngcontent-%COMP%_progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress[_ngcontent-%COMP%]:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark[_ngcontent-%COMP%]:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content[_ngcontent-%COMP%]{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse[_ngcontent-%COMP%], .skeleton-loader.progress-dark[_ngcontent-%COMP%], .skeleton-loader.custom-content[_ngcontent-%COMP%], .skeleton-loader.progress[_ngcontent-%COMP%]:before{animation:none}.skeleton-loader.progress[_ngcontent-%COMP%]:before, .skeleton-loader.progress-dark[_ngcontent-%COMP%], .skeleton-loader.custom-content[_ngcontent-%COMP%]{background-image:none}}@media screen and (min-device-width: 1200px){.skeleton-loader[_ngcontent-%COMP%]{-webkit-user-select:none;user-select:none;cursor:wait}}@keyframes _ngcontent-%COMP%_progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes _ngcontent-%COMP%_pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxSkeletonLoaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-skeleton-loader',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div\\n  *ngFor=\\\"let item of items\\\"\\n  class=\\\"skeleton-loader\\\"\\n  [attr.aria-label]=\\\"ariaLabel\\\"\\n  aria-busy=\\\"true\\\"\\n  aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"100\\\"\\n  [attr.aria-valuetext]=\\\"loadingText\\\"\\n  role=\\\"progressbar\\\"\\n  tabindex=\\\"-1\\\"\\n  [ngClass]=\\\"{\\n    'custom-content': appearance === 'custom-content',\\n    circle: appearance === 'circle',\\n    progress: animation === 'progress',\\n    'progress-dark': animation === 'progress-dark',\\n    pulse: animation === 'pulse'\\n  }\\\"\\n  [ngStyle]=\\\"theme\\\"\\n>\\n  <ng-content *ngIf=\\\"appearance  === 'custom-content'\\\"></ng-content>\\n</div>\\n\",\n      styles: [\".skeleton-loader{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader:after,.skeleton-loader:before{box-sizing:border-box}.skeleton-loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress,.skeleton-loader.progress-dark{transform:translateZ(0)}.skeleton-loader.progress:after,.skeleton-loader.progress:before,.skeleton-loader.progress-dark:after,.skeleton-loader.progress-dark:before{box-sizing:border-box}.skeleton-loader.progress:before,.skeleton-loader.progress-dark:before{animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse{animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse,.skeleton-loader.progress-dark,.skeleton-loader.custom-content,.skeleton-loader.progress:before{animation:none}.skeleton-loader.progress:before,.skeleton-loader.progress-dark,.skeleton-loader.custom-content{background-image:none}}@media screen and (min-device-width: 1200px){.skeleton-loader{-webkit-user-select:none;user-select:none;cursor:wait}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGX_SKELETON_LOADER_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    count: [{\n      type: Input\n    }],\n    loadingText: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }]\n  });\n})();\nclass NgxSkeletonLoaderModule {\n  static forRoot(config) {\n    return {\n      ngModule: NgxSkeletonLoaderModule,\n      providers: [{\n        provide: NGX_SKELETON_LOADER_CONFIG,\n        useValue: config\n      }]\n    };\n  }\n  /** @nocollapse */\n}\n_class2 = NgxSkeletonLoaderModule;\n_class2.ɵfac = function _class2_Factory(t) {\n  return new (t || _class2)();\n};\n/** @nocollapse */_class2.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: _class2\n});\n/** @nocollapse */_class2.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxSkeletonLoaderModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxSkeletonLoaderComponent],\n      imports: [CommonModule],\n      exports: [NgxSkeletonLoaderComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-skeleton-loader\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGX_SKELETON_LOADER_CONFIG, NgxSkeletonLoaderComponent, NgxSkeletonLoaderModule };","map":{"version":3,"names":["i0","InjectionToken","isDevMode","Component","ChangeDetectionStrategy","Inject","Optional","Input","NgModule","i1","CommonModule","_class_div_0_ng_content_1_Template","rf","ctx","ɵɵprojection","_c0","a0","a1","a2","a3","a4","circle","progress","pulse","_class_div_0_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵproperty","ɵɵpureFunction5","appearance","animation","theme","ɵɵattribute","ariaLabel","loadingText","ɵɵadvance","_c1","NGX_SKELETON_LOADER_CONFIG","NgxSkeletonLoaderComponent","constructor","config","count","items","ngOnInit","validateInputValues","test","console","error","length","allowedAnimations","indexOf","String","join","extendsFromRoot","ngOnChanges","changes","find","key","isFirstChange","previousValue","currentValue","_class","ɵfac","_class_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","features","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","consts","template","_class_Template","ɵɵprojectionDef","dependencies","NgClass","NgForOf","NgIf","NgStyle","styles","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","OnPush","undefined","decorators","NgxSkeletonLoaderModule","forRoot","ngModule","providers","provide","useValue","_class2","_class2_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["/Users/thev1rtual/Desktop/code/liberty-final/node_modules/ngx-skeleton-loader/fesm2022/ngx-skeleton-loader.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Component, ChangeDetectionStrategy, Inject, Optional, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nconst NGX_SKELETON_LOADER_CONFIG = new InjectionToken('ngx-skeleton-loader.config');\n\nclass NgxSkeletonLoaderComponent {\n    constructor(config) {\n        this.config = config;\n        const { appearance = 'line', animation = 'progress', theme = null, loadingText = 'Loading...', count = 1, ariaLabel = 'loading', } = config || {};\n        this.appearance = appearance;\n        this.animation = animation;\n        this.theme = theme;\n        this.loadingText = loadingText;\n        this.count = count;\n        this.items = [];\n        this.ariaLabel = ariaLabel;\n    }\n    ngOnInit() {\n        this.validateInputValues();\n    }\n    validateInputValues() {\n        // Checking if it's receiving a numeric value (string having ONLY numbers or if it's a number)\n        if (!/^\\d+$/.test(`${this.count}`)) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'count' a numeric value. Forcing default to \"1\".`);\n            }\n            this.count = 1;\n        }\n        //Force count to 1 when custom-content is used\n        if (this.appearance === 'custom-content') {\n            // Shows error message only in Development\n            if (isDevMode() && this.count !== 1) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` enforces elements with \"custom-content\" appearance as DOM nodes. Forcing \"count\" to \"1\".`);\n                this.count = 1;\n            }\n        }\n        this.items.length = this.count;\n        const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];\n        if (allowedAnimations.indexOf(String(this.animation)) === -1) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'animation' as: ${allowedAnimations.join(', ')}. Forcing default to \"progress\".`);\n            }\n            this.animation = 'progress';\n        }\n        if (['circle', 'line', 'custom-content', ''].indexOf(String(this.appearance)) === -1) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'appearance' as: circle or line or custom-content or empty string. Forcing default to \"''\".`);\n            }\n            this.appearance = '';\n        }\n        // This code is not using optional chaining since it's only supported on Angular CLI v12\n        //  - more details in this comment https://github.com/angular/angular-cli/issues/20471#issuecomment-815599616\n        // Which raises issues on the consumer's side. E.G: https://github.com/willmendesneto/ngx-skeleton-loader/issues/150#issuecomment-1638612329\n        const { theme } = this.config || {};\n        if (!!theme && !!theme.extendsFromRoot && this.theme !== null) {\n            // Shows error message only in Development\n            this.theme = { ...this.config.theme, ...this.theme };\n        }\n    }\n    ngOnChanges(changes) {\n        // Avoiding multiple calls for the same input in case there's no changes in the fields\n        // Checking if the fields that require validation are available and if they were changed\n        // In case were not changed, we stop the function. Otherwise, `validateInputValues` will be called.\n        if (['count', 'animation', 'appearance'].find(key => changes[key] && (changes[key].isFirstChange() || changes[key].previousValue === changes[key].currentValue))) {\n            return;\n        }\n        this.validateInputValues();\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: NgxSkeletonLoaderComponent, deps: [{ token: NGX_SKELETON_LOADER_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    /** @nocollapse */ static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: NgxSkeletonLoaderComponent, selector: \"ngx-skeleton-loader\", inputs: { count: \"count\", loadingText: \"loadingText\", appearance: \"appearance\", animation: \"animation\", ariaLabel: \"ariaLabel\", theme: \"theme\" }, usesOnChanges: true, ngImport: i0, template: \"<div\\n  *ngFor=\\\"let item of items\\\"\\n  class=\\\"skeleton-loader\\\"\\n  [attr.aria-label]=\\\"ariaLabel\\\"\\n  aria-busy=\\\"true\\\"\\n  aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"100\\\"\\n  [attr.aria-valuetext]=\\\"loadingText\\\"\\n  role=\\\"progressbar\\\"\\n  tabindex=\\\"-1\\\"\\n  [ngClass]=\\\"{\\n    'custom-content': appearance === 'custom-content',\\n    circle: appearance === 'circle',\\n    progress: animation === 'progress',\\n    'progress-dark': animation === 'progress-dark',\\n    pulse: animation === 'pulse'\\n  }\\\"\\n  [ngStyle]=\\\"theme\\\"\\n>\\n  <ng-content *ngIf=\\\"appearance  === 'custom-content'\\\"></ng-content>\\n</div>\\n\", styles: [\".skeleton-loader{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader:after,.skeleton-loader:before{box-sizing:border-box}.skeleton-loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress,.skeleton-loader.progress-dark{transform:translateZ(0)}.skeleton-loader.progress:after,.skeleton-loader.progress:before,.skeleton-loader.progress-dark:after,.skeleton-loader.progress-dark:before{box-sizing:border-box}.skeleton-loader.progress:before,.skeleton-loader.progress-dark:before{animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse{animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse,.skeleton-loader.progress-dark,.skeleton-loader.custom-content,.skeleton-loader.progress:before{animation:none}.skeleton-loader.progress:before,.skeleton-loader.progress-dark,.skeleton-loader.custom-content{background-image:none}}@media screen and (min-device-width: 1200px){.skeleton-loader{-webkit-user-select:none;user-select:none;cursor:wait}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: NgxSkeletonLoaderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-skeleton-loader', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\n  *ngFor=\\\"let item of items\\\"\\n  class=\\\"skeleton-loader\\\"\\n  [attr.aria-label]=\\\"ariaLabel\\\"\\n  aria-busy=\\\"true\\\"\\n  aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"100\\\"\\n  [attr.aria-valuetext]=\\\"loadingText\\\"\\n  role=\\\"progressbar\\\"\\n  tabindex=\\\"-1\\\"\\n  [ngClass]=\\\"{\\n    'custom-content': appearance === 'custom-content',\\n    circle: appearance === 'circle',\\n    progress: animation === 'progress',\\n    'progress-dark': animation === 'progress-dark',\\n    pulse: animation === 'pulse'\\n  }\\\"\\n  [ngStyle]=\\\"theme\\\"\\n>\\n  <ng-content *ngIf=\\\"appearance  === 'custom-content'\\\"></ng-content>\\n</div>\\n\", styles: [\".skeleton-loader{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader:after,.skeleton-loader:before{box-sizing:border-box}.skeleton-loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress,.skeleton-loader.progress-dark{transform:translateZ(0)}.skeleton-loader.progress:after,.skeleton-loader.progress:before,.skeleton-loader.progress-dark:after,.skeleton-loader.progress-dark:before{box-sizing:border-box}.skeleton-loader.progress:before,.skeleton-loader.progress-dark:before{animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse{animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse,.skeleton-loader.progress-dark,.skeleton-loader.custom-content,.skeleton-loader.progress:before{animation:none}.skeleton-loader.progress:before,.skeleton-loader.progress-dark,.skeleton-loader.custom-content{background-image:none}}@media screen and (min-device-width: 1200px){.skeleton-loader{-webkit-user-select:none;user-select:none;cursor:wait}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_SKELETON_LOADER_CONFIG]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { count: [{\n                type: Input\n            }], loadingText: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }] } });\n\nclass NgxSkeletonLoaderModule {\n    static forRoot(config) {\n        return {\n            ngModule: NgxSkeletonLoaderModule,\n            providers: [{ provide: NGX_SKELETON_LOADER_CONFIG, useValue: config }],\n        };\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: NgxSkeletonLoaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: NgxSkeletonLoaderModule, declarations: [NgxSkeletonLoaderComponent], imports: [CommonModule], exports: [NgxSkeletonLoaderComponent] }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: NgxSkeletonLoaderModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: NgxSkeletonLoaderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgxSkeletonLoaderComponent],\n                    imports: [CommonModule],\n                    exports: [NgxSkeletonLoaderComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-skeleton-loader\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGX_SKELETON_LOADER_CONFIG, NgxSkeletonLoaderComponent, NgxSkeletonLoaderModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}